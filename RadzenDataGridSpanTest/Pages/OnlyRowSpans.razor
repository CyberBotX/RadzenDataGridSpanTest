@page "/OnlyRowSpans"

<h3>Only Row Spans</h3>

<h4>How it should look:</h4>
<table class="native">
	<tr>
		<td rowspan="2">*</td>
		<td>*</td>
		<td>*</td>
		<td rowspan="2">*</td>
		<td>*</td>
	</tr>
	<tr>
		<td rowspan="2">*</td>
		<td>*</td>
		<td rowspan="2">*</td>
	</tr>
	<tr>
		<td>*</td>
		<td>*</td>
		<td>*</td>
	</tr>
</table>

<h4>RadzenDataGrid with no gaps in data:</h4>
<RadzenDataGridCommon Columns="this.columns" Data="this.rowsNoGaps" />

<h4>RadzenDataGrid with gaps in data:</h4>
<RadzenDataGridCommon Columns="this.columns" Data="this.rowsGaps" />

@code
{
	List<string> columns = new() { "A", "B", "C", "D", "E" };
	List<Row> rowsNoGaps = new()
	{
		new()
		{
			RowNumber = 1,
			Cells = new()
			{
				["A"] = new()
				{
					Value = "*",
					Rows = 2
				},
				["B"] = new()
				{
					Value = "*"
				},
				["C"] = new()
				{
					Value = "*"
				},
				["D"] = new()
				{
					Value = "*",
					Rows = 2
				},
				["E"] = new()
				{
					Value = "*"
				}
			}
		},
		new()
		{
			RowNumber = 2,
			Cells = new()
			{
				["A"] = new()
				{
					Rows = 2,
					Ignore = true
				},
				["B"] = new()
				{
					Value = "*",
					Rows = 2
				},
				["C"] = new()
				{
					Value = "*"
				},
				["D"] = new()
				{
					Rows = 2,
					Ignore = true
				},
				["E"] = new()
				{
					Value = "*",
					Rows = 2
				}
			}
		},
		new()
		{
			RowNumber = 3,
			Cells = new()
			{
				["A"] = new()
				{
					Value = "*"
				},
				["B"] = new()
				{
					Rows = 2,
					Ignore = true
				},
				["C"] = new()
				{
					Value = "*",
				},
				["D"] = new()
				{
					Value = "*"
				},
				["E"] = new()
				{
					Rows = 2,
					Ignore = true
				}
			}
		}
	};
	List<Row> rowsGaps;

	public OnlyRowSpans() => this.rowsGaps = this.rowsNoGaps.Select(r => new Row
	{
		RowNumber = r.RowNumber,
		Cells = r.Cells.Where(kvp => !kvp.Value.Ignore).ToDictionary(kvp => kvp.Key, kvp => kvp.Value)
	}).ToList();
}
